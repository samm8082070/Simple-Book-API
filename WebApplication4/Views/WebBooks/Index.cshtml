@model IEnumerable<WebApplication4.Dtos.BookDto>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a> @* This might need to be updated if your Create action also uses DTOs *@
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Author)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.NumberOfPages)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PublishDate)
            </th>
            <th>Genres</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Author)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.NumberOfPages)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PublishDate)
                </td>
                <td>
                    <ul>
                        @foreach (var genre in item.Genres)  @* Access Genres from the DTO *@
                        {
                            <li>@genre.GenreName</li>         @* Display GenreName from GenreDto *@
                        }
                    </ul>
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> | @* These might need to be updated if your Edit/Details/Delete actions also use DTOs *@
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>